//AcctBoxGoc.java
package com.gof.entity;
//Generated 2020. 1. 16 ���� 3:15:14 by Hibernate Tools 5.1.0.Beta1

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Locale;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.dom4j.util.StringUtils;
import org.eclipse.microprofile.openapi.annotations.media.Schema;

import com.gof.enums.EBoolean;
import com.gof.enums.ECoa;
import com.gof.enums.EContStatus;
import com.gof.enums.ELiabType;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
* AcctBox generated by hbm2java
*/
@Entity
@IdClass(MetaInfoId.class)
@Table(name = "COLUMNS", schema = "INFORMATION_SCHEMA")
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Slf4j
public class MetaInfo implements Serializable {
	private static final long serialVersionUID = -8151467682976876533L;
	
	@Id private String tableCatalog;
	@Id private String tableSchema;
	@Id private String tableName;
	@Id private String columnName;

	private String typeName;
	private Integer nullable;
	private String remarks;
	
	public String getColumnProperty() {
		final StringBuilder buf = new StringBuilder(columnName.toLowerCase());
		for (int i = 1; i < buf.length() - 1; i++) {
//			log.info("charactor : {},{}", buf.charAt(i));
			if( buf.charAt(i)=='_' &&  i+1 < buf.length()){
				buf.setCharAt(i+1, Character.toUpperCase(buf.charAt(i+1)) );
			}
		}
		return buf.toString().replace("_", "");
	}
	
	@Override
	public boolean equals(Object arg0) {
		return super.equals(arg0);
	}
	@Override
	public int hashCode() {
		return super.hashCode();
	}
	
	@Override
	public String toString() {
		 StringBuilder 	builder = new StringBuilder();
	 	 return builder
	 		.append(tableCatalog).append(",")
	 	 	.append(tableSchema).append(",")
	 	 	.append(tableName).append(",")
	 	 	.append(columnName).append(",")
	 	 	.append(typeName).append(",")
	 	 	.append(nullable).append(",")
	 	 	.toString();
	}
}
